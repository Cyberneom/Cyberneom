def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

android {
    //compileSdkVersion flutter.compileSdkVersion
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.cyberneom.neom"
        minSdkVersion 21 //flutter.minSdkVersion
        targetSdkVersion 33 // flutter.targetSdkVersion
//        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //def billing_version = "4.0.0"
    //implementation "com.android.billingclient:billing:$billing_version"

    // add the Firebase SDK for Google Analytics
    implementation platform('com.google.firebase:firebase-bom:31.4.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.android.gms:play-services-auth:20.5.0'
    // Required only if Facebook login support is required
    //implementation 'com.facebook.android:facebook-login:latest.release'
    //implementation 'com.facebook.android:facebook-android-sdk:[8,9)'
    //implementation 'com.facebook.android:facebook-share:latest.release'

    //implementation 'com.google.android.gms:play-services-base:18.0.0'
    //implementation 'com.google.android.gms:play-services-tasks:18.0.0'
    //implementation 'com.google.android.gms:play-services-basement:18.0.0'
    //implementation 'com.google.android.gms:play-services-pay:16.0.2'

//    def multidex_version = "2.0.1"
//    implementation "androidx.multidex:multidex:$multidex_version"

}

//configurations {
//    all {
//        exclude module: 'httpclient'
//        //exclude group: "com.android.support", module: "support-core-ui"
//        //exclude group: "com.android.support", module: "support-compat"
//    }
//    project.ext {
//        set('FlutterFire', [
//                FirebaseSDKVersion: '21.1.0'
//        ])
//    }
//}
