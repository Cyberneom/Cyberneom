import 'package:cyberneom/controllers/giglist-song-controller.dart';
import 'package:cyberneom/controllers/song-search-controller.dart';
import 'package:cyberneom/model/gigSong.dart';
import 'package:cyberneom/model/gig-song.dart';
import 'package:cyberneom/utils/enum/gig_constants.dart';
import 'package:flutter/material.dart';
import 'package:flutter_rating_bar/flutter_rating_bar.dart';
import 'package:get/get.dart';
import 'package:rflutter_alert/rflutter_alert.dart';
import 'package:transparent_image/transparent_image.dart';

class GiglistSongList extends StatelessWidget {

  static String getLeadingHeroTag(int index) {
    return "LEADING_HERO_TAG_" + index.toString();
  }

  @override
  Widget build(BuildContext context) {
    return GetBuilder<GiglistSongController>(
        id: "giglistSong",
        init: GiglistSongController(),
        builder: (_) => ListView.builder(
              padding: EdgeInsets.fromLTRB(0.0, 8.0, 0.0, 8.0),
              itemCount: _.giglistSongs.length,
              itemBuilder: (context, index) {
                String gigSongKey = _.giglistSongs.keys.elementAt(index);
                GiglistSong giglistSong = _.giglistSongs[gigSongKey];
                return GestureDetector(
                    child: ListTile(
                      contentPadding: const EdgeInsets.all(8.0),
                      title: Text(giglistSong.songName),
                      subtitle: Row(children: [Text(giglistSong.artist), SizedBox(width:5,), Obx(()=>RatingBar(
                      initialRating: giglistSong.songState.toDouble(),
                      minRating: 1,
                      ignoreGestures: true,
                      direction: Axis.horizontal,
                      allowHalfRating: false,
                      itemCount: 5,
                      ratingWidget: RatingWidget(
                        full: _image(GigAssets.heart),
                        half: _image(GigAssets.heart_half),
                        empty: _image(GigAssets.heart_border),
                      ),
                      itemPadding: EdgeInsets.symmetric(horizontal: 2.0),
                      itemSize: 15,
                      onRatingUpdate: (rating) {
                        print(rating);
                      },
                    ),),]),
                      onTap: () => _.getGiglistSongDetails(giglistSong.gigSongId),
                      leading: Hero(
                        tag: GiglistSongList.getLeadingHeroTag(index),
                        child: FadeInImage.memoryNetwork(
                          width: 56.0,
                          placeholder: kTransparentImage,
                          image: giglistSong.imgUrl.isNullOrBlank ? GigConstants.noIamage :giglistSong.imgUrl,
                          fadeInDuration: Duration(milliseconds: 300)
                        ),
                      ),
                    ),
                    onLongPress: () => Alert(
                        context: context,
                        title: "Song Preferences",
                        content: Column(
                          children: <Widget>[
                            Obx(() =>DropdownButton<String>(
                              items: GigConstants.songStatesValues.map((String songStateVal) {
                                return DropdownMenuItem<String>(value: songStateVal, child: Text(songStateVal),
                                );
                              }).toList(),
                              onChanged: (String newSongState) {
                                _.setSongState(newSongState);
                              },
                              value: GigConstants.songStatesValues.elementAt(_.songState),
                              icon: Icon(Icons.arrow_downward),
                              iconSize: 24,
                              elevation: 16,
                              style: TextStyle(color: Colors.white),
                              underline: Container(
                              height: