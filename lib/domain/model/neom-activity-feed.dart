import 'package:cyberneom/utils/enum/neom-activity-feed-type.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:enum_to_string/enum_to_string.dart';

class NeomActivityFeed {

  String id;
  String neomOwnerId;
  String neomProfileId;
  String neomProfileName;
  String neomProfileImgUrl;
  String neomMessage;

  NeomActivityFeedType?  neomActivityFeedType;
  String mediaUrl;
  int createdTime;


  NeomActivityFeed({
      this.id = "",
      this.neomOwnerId = "",
      this.neomProfileId = "",
      this.neomProfileName = "",
      this.neomProfileImgUrl = "",
      this.neomMessage = "",
      this.neomActivityFeedType,
      this.mediaUrl = "",
      this.createdTime = 0});


  @override
  String toString() {
    return 'neomActivityFeed{id: $id, neomOwnerId: $neomOwnerId, neomProfileId: $neomProfileId, neomProfileName: $neomProfileName, neomProfileImgUrl: $neomProfileImgUrl, neomMessage: $neomMessage, neomActivityFeedType: $neomActivityFeedType, mediaUrl: $mediaUrl, createdTime: $createdTime}';
  }
  

  NeomActivityFeed.fromDocumentSnapshot({required DocumentSnapshot documentSnapshot}):
    id = documentSnapshot.id,
    neomOwnerId = documentSnapshot.get("neomOwnerId"),
    neomProfileId = documentSnapshot.get("neomProfileId"),
    neomProfileName = documentSnapshot.get("neomProfileName"),
    neomProfileImgUrl = documentSnapshot.get("neomProfileImgUrl"),
    neomMessage = documentSnapshot.get("neomMessage"),
    neomActivityFeedType = EnumToString.fromString(NeomActivityFeedType.values, documentSnapshot.get("neomActivityFeedType")),
    mediaUrl = documentSnapshot.get("mediaUrl"),
    createdTime = documentSnapshot.get("createdTime");


  Map<String, dynamic>  toJSON()=>{
//    'id': id, //generated by firebase
    'neomOwnerId': neomOwnerId,
    'neomProfileId': neomProfileId,
    'neomProfileName': neomProfileName,
    'neomProfileImgUrl': neomProfileImgUrl,
    'neomMessage': neomMessage,
    'neomActivityFeedType': EnumToString.convertToString(neomActivityFeedType),
    'mediaUrl': mediaUrl,
    'createdTime': createdTime,
  };

}